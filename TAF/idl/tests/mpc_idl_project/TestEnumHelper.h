#ifndef TEST_201771_151620LASAGNE_EnumSupport
#define TEST_201771_151620LASAGNE_EnumSupport


/******************************************************
* Code generated by LASAGNE IDL Compiler
* LASAGNE BE Version : 1.4.4
* TAO_IDL FE Version : 2.4.3
* LASAGNE Build Time : Jul  1 2017
* Generation Visitor : LASAGNE_EnumSupport
* Creation Date      : 201771_151620
* Input File         : Test.idl
******************************************************/

// IDL Includes 1
#include "commonEnumHelper.h" // common.idl
   namespace dsto
   {
      enum dsto::SHAPE StringToSHAPE(const std::string &typeString)
      {
         if("Triangle" == typeString)
         {
            return dsto::Triangle;
         }

         if("Square" == typeString)
         {
            return dsto::Square;
         }

         ACE_ERROR((LM_ERROR, "ERROR: %N, %l : The input string has not been matched to any of the dsto::SHAPE enumerator values \n", __FILE__, __LINE__)); 

         std::runtime_error exception("ERROR: The input string has not been matched to any of the dsto::SHAPE enumerator values \n");
         throw exception; 

      } // end function stringToSHAPE 

      std::string SHAPEToString(enum dsto::SHAPE typeEnum)
      {
         if(dsto::Triangle == typeEnum)
         {
            return "Triangle";
         }

         if(dsto::Square == typeEnum)
         {
            return "Square";
         }

         ACE_ERROR((LM_ERROR, "ERROR: There is no dsto::SHAPE enumerator value matching the input enumerator value \n")); 

         return "ERROR: There is no dsto::SHAPE enumerator value matching the input enumerator value \n";
      } // end function SHAPEToString 


      int SHAPESize(void)
      {
         return 2;
      } 

} // namespace dsto

#endif //TEST_201771_151620LASAGNE_EnumSupport
