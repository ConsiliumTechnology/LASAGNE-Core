#ifndef COMMON_201771_151619LASAGNE_EnumSupport
#define COMMON_201771_151619LASAGNE_EnumSupport


/******************************************************
* Code generated by LASAGNE IDL Compiler
* LASAGNE BE Version : 1.4.4
* TAO_IDL FE Version : 2.4.3
* LASAGNE Build Time : Jul  1 2017
* Generation Visitor : LASAGNE_EnumSupport
* Creation Date      : 201771_151619
* Input File         : common.idl
******************************************************/

   namespace common
   {
      enum common::TestingEnum StringToTestingEnum(const std::string &typeString)
      {
         if("ONE" == typeString)
         {
            return common::ONE;
         }

         if("TWO" == typeString)
         {
            return common::TWO;
         }

         if("UP_lower_MIDle" == typeString)
         {
            return common::UP_lower_MIDle;
         }

         ACE_ERROR((LM_ERROR, "ERROR: %N, %l : The input string has not been matched to any of the common::TestingEnum enumerator values \n", __FILE__, __LINE__)); 

         std::runtime_error exception("ERROR: The input string has not been matched to any of the common::TestingEnum enumerator values \n");
         throw exception; 

      } // end function stringToTestingEnum 

      std::string TestingEnumToString(enum common::TestingEnum typeEnum)
      {
         if(common::ONE == typeEnum)
         {
            return "ONE";
         }

         if(common::TWO == typeEnum)
         {
            return "TWO";
         }

         if(common::UP_lower_MIDle == typeEnum)
         {
            return "UP_lower_MIDle";
         }

         ACE_ERROR((LM_ERROR, "ERROR: There is no common::TestingEnum enumerator value matching the input enumerator value \n")); 

         return "ERROR: There is no common::TestingEnum enumerator value matching the input enumerator value \n";
      } // end function TestingEnumToString 


      int TestingEnumSize(void)
      {
         return 3;
      } 

} // namespace common

#endif //COMMON_201771_151619LASAGNE_EnumSupport
